{
  "name": "cgijs",
  "description": "`CGIJS` is a Nodejs Module/library to run any `CGI` mode/`Interpreted language script` files, OR connect to any protocol or any web application server proxies, OR manage processes in the system.",
  "version": "1.1.0",
  "author": {
    "name": "Ganesh",
    "email": "ganeshsurfs@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ganeshkbhat/cgi-js.git"
  },
  "scripts": {
    "split": "node ./demo/demo-app/demo-split.js",
    "recursive": "node ./demo/demo-app/demo-recursive.js",
    "process": "node ./demo/demo-app/demo-processes.js",
    "all": "node ./demo/demo-app/demo-all.js",
    "test": "mocha ./test/src"
  },
  "main": "index.js",
  "dependencies": {
    "http-proxy": "1.18.1",
    "http-proxy-to-socks": "1.1.2",
    "shelljs": "0.8.5",
    "socket-proxy": "^1.1.0",
    "socks": "2.6.2",
    "udp-proxy": "1.2.0"
  },
  "devDependencies": {
    "chai": "4.3.6",
    "eslint": "8.11.0",
    "express": "4.17.3",
    "mocha": "9.2.2",
    "sinon": "13.0.1",
    "socket.io": "4.4.1",
    "supertest": "6.2.2",
    "ws": "8.5.0"
  },
  "private": false,
  "license": "MIT",
  "engines": {
    "node": ">=8.0.0"
  },
  "keywords": [
    "cgijs",
    "run cgi scripts",
    "manage processes",
    "manage any protocol proxy (proxies)",
    "node.js",
    "cgi",
    "php",
    "python",
    "ruby",
    "javascript",
    "perl",
    "php-cgi",
    "http proxy",
    "tcp proxy",
    "udp proxy",
    "websocket proxy",
    "socks proxy",
    "electron",
    "scripts",
    "run scripts",
    "cgi scripts",
    "run cgi mode scripts",
    "cgi py",
    "cgi rb",
    "cgi php",
    "cgi php-cgi",
    "cgi js",
    "cgi node.js",
    "cgi cgi",
    "run http proxy",
    "run tcp proxy",
    "run udp proxy",
    "run websocket proxy",
    "run socks proxy",
    "run cgi scripts using javascript",
    "run cgi scripts using js",
    "manage web servers",
    "web server",
    "run proxy to third party servers",
    "run proxy to third party cgi based servers",
    "node",
    "nodejs",
    "node js",
    "proxy",
    "proxy redirect",
    "any protocol proxies",
    "http",
    "https",
    "udp",
    "tcp",
    "ssh",
    "ftp",
    "socket",
    "websocket",
    "socks",
    "ssl"
  ]
}
